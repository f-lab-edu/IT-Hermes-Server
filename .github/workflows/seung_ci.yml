# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: MYSQL 세팅
      uses: samin/mysql-action@v1
      with:
        host port: 3307 # Optional, default value is 3306. The port of host
        container port: 3307 # Optional, default value is 3306. The port of container
        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
        mysql database: 'test_schema' # Optional, default value is "test". The specified database which will be create
        mysql root password: 'test1234' # Required if "mysql user" is empty, default is empty. The root superuser password
        mysql user: 'test' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Of course you can use secrets, too
        mysql password: 'test1234' # Required if "mysql user" exists. The password for the "mysql user"
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: 테스트코드 확인
      run: ./gradlew test

    - name: 스프링부트 애플리케이션 빌드
      run: ./gradlew build -x test
      
    - name: 도커 이미지 빌드
      run: docker build -t skkim0832/it-hermes-server . -f Dockerfile-seung
        
    - name: Docker Hub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.SEUNGKI_DOCKER_USERNAME }}
        password: ${{ secrets.SEUNGKI_DOCKER_PASSWORD }}
        
    - name: Docker Hub push
      run: docker push skkim0832/it-hermes-server
      
    - name: ssh seung-server and docker container start
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SEUNGKI_SERVER_PORTFOWARDING_IP }}
        username: ${{ secrets.SEUNGKI_SERVER_USERNAME }}
        password: ${{ secrets.SEUNGKI_SERVER_PASSWORD }}
        port: ${{ secrets.SEUNGKI_SERVER_PORTFORWARDING_PORT }}
        script: | 
              docker rmi -f skkim0832/it-hermes-server
              docker pull skkim0832/it-hermes-server
              nohup docker run -p 8080:8080 skkim0832/it-hermes-server &
